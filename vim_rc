
" 基础设置============================================

" 设置行号
set nu

" 设置搜索高亮
" set hlsearch

" 设置table键缩进
set ts=4

" 设置语法高亮度
syntax enable
syntax on

" 设置c语言缩进
set cindent

" color
color desert256

" 设置leader键
let mapleader="\<space>"

" 设置grepprg参数,default=grep -n $* /dev/null
" 可以参考:h 'grepprg'
" 执行去除.git,.svn 目录,执行时可以加上--include=*.c 指定类型
set grepprg=grep\ -rn\ --exclude-dir=*.{root,git,svn,o,hg,project,swp,tags}\ --include=*.{c,cpp,cc,h}\ $*

" 修正补全目录的色彩：默认太难看
hi! Pmenu guibg=gray guifg=black ctermbg=gray ctermfg=black
hi! PmenuSel guibg=gray guifg=brown ctermbg=brown ctermfg=gray

" 设置按键映射============================================

" inster使用ctrl-w 进行保存
inoremap <C-w> <Esc>:w<cr>
noremap <leader>c :close<cr>

" 使用ctrl+h/j/k/l 切换窗口
noremap <C-h> <C-w>h
noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l


" 设置F10 打开/关闭QuickFix 窗口
" 将vim-init中的asyncrun.vim 拷贝到autoload目录中
nnoremap <F10> :call asyncrun#quickfix_toggle(10)<cr>
nmap <F8> :TagbarToggle<CR>

" 插件加载==========================================
call plug#begin('~/.vim/plugged')

" 安装startify插件,显示最近打开文件
Plug 'mhinz/vim-startify'

" easymotion 快速移动插件
Plug 'easymotion/vim-easymotion'

" 安装目录管理插件, 模糊搜索CtrlP
Plug 'preservim/nerdtree'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'ctrlpvim/ctrlp.vim'
" 安装fzf.vim依赖fzf命令确保自己已经安装了
" 使用Ag命令同时也需要安装 sudo apt-get install silversearcher-ag
" 或者使用ack.vim 参考https://github.com/ggreer/the_silver_searcher
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

" 代码大纲tagbar
Plug 'preservim/tagbar'

" 补全类插件------
" 轻量级补全字典补全
Plug 'skywind3000/vim-auto-popmenu'
let g:apc_enable_ft = {'*':1}
" set cpt=.,k,w,b
set completeopt=menu,menuone,noselect
set shortmess+=c

Plug 'skywind3000/vim-dict'

" deoplete 补全, 需要python3支持, :echo has("python3")
"if has('nvim')
"  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
"else
"  Plug 'Shougo/deoplete.nvim'
"  Plug 'roxma/nvim-yarp'
"  Plug 'roxma/vim-hug-neovim-rpc'
"endif
"let g:deoplete#enable_at_startup = 1
"set completeopt-=preview

" 自动生成tags文件，异步更新
Plug 'ludovicchabant/vim-gutentags'
" gutentags 搜索工程目录的标志，碰到这些文件/目录名就停止向上一级目录递归
let g:gutentags_project_root = ['.root', '.svn', '.git', '.hg', '.project']
" 所生成的数据文件的名称
let g:gutentags_ctags_tagfile = '.tags'
" 配置 ctags 的参数
let g:gutentags_ctags_extra_args = ['--fields=+niazS', '--extra=+q']
" let g:gutentags_ctags_extra_args += ['--c++-kinds=+px']
" let g:gutentags_ctags_extra_args += ['--c-kinds=+px']
let g:gutentags_ctags_extra_args += ['--output-format=e-ctags']

" vim-preview
Plug 'skywind3000/vim-preview'


" 括号自动补全
Plug 'Raimondi/delimitMate'

" 美化状态栏
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'

" 安装缩进线
Plug 'Yggdroot/indentLine'

" git支持,以及显示git diff插件
" Plug 'tpope/vim-fugitive'
Plug 'mhinz/vim-signify'
" default updatetime 4000ms is not good for async update
set updatetime=100

call plug#end()

" 插件设置===============================================

" nerdtree 绑定快捷键
noremap <leader>nt :NERDTreeToggle<cr>
noremap <leader>nf :NERDTreeFind<cr>
" 打开vim自动进入目录树
" autocmd VimEnter * NERDTree | wincmd p
" Exit Vim if NERDTree is the only window remaining in the only tab.
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif

" ctrl-p 绑定快捷键
let g:ctrlp_map = '<c-p>'

" startify 设置session保存位置
let g:startify_session_dir = '~/.vim/session'

" easymotion 插件设置
map <leader>em <Plug>(easymotion-s2)

" ctags 相关设置=========================================

" 向上查找.tags文件
set tags=./.tags;,.tags


" 自定义命令设置==========================================
